#-*-shell-script-*-
[arpwatch]
#Where to write the ARP data we are using
datafile=/var/lib/mikrotik-arpwatch/arp.dat
#Keep records for this long (days)
keepdays=180

[daemon]
#Daemon's log level (one of 'emergency', 'alert', 'critical', 'error', 'warning','notice', 'info', 'debug')
#All messages up to this level will be logged
log_level=notice
#Username to run as
user=nobody
#Group to run as
group=nobody
#pid file to use
pid_file=/var/run/mikrotik-arpwatch.pid



[schedule]
#At least this many seconds between each write of the datafile to disk
writedelay=120
#Seconds between cleanup attempts
cleanupdelay=43200
#Seconds to wait for messages from routerboard before going and doing
#something else
select_timeout=5

[api]
user=apiuser
password=password
host=firewall.example.com:8728
#Use TCP keepalive to detect loss of connection to firewall
keepalive_enabled=True
#Override sysctl net.ipv4.tcp_keepalive_time (Default: 20 mins before sending a probe)
keepalive_time=1200
#Override sysctl net.ipv4.tcp_keepalive_probes (Default: send 9 probes before giving up) 
keepalive_probes=9
#Override sysctl net.ipv4.tcp_keepalive_intvl (Default: 30secs between probes)
keepalive_interval=30
#Number of seconds to wait before retrying a failed connection. A value of 0 will result in the daemon exiting immediately
#Otherwise the daemon will retry indefinitely at the specified intervals
retry_interval=60


#Use multiline items to set multiple patterns
#[patterns]
#include_mac=
#exclude_mac=
#include_ip=
#exclude_ip=
